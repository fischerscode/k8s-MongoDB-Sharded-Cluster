---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-configserver
  labels:
    app: mongodb-configserver
spec:
  ports:
    - name: mongo
      port: 27017
  clusterIP: None
  selector:
    app: mongodb-configserver

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: certificate-mongodb-config-server
spec:
  secretName: certificate-mongodb-config-server
  issuerRef:
    name: mongodb-cluster-ca-issuer
    kind: Issuer
  dnsNames:
    - "mongodb-configserver.mongodb-configserver"
    - "*.mongodb-configserver"


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-configserver
spec:
  selector:
    matchLabels:
      app: mongodb-configserver
  serviceName: mongodb-configserver
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongodb-configserver
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo:4.2.9
          command:
            - "/bin/sh"
            - "-c"
            - |
              cat /certs/tls.crt /certs/tls.key > /tls.pem
              mongod \
                --configsvr \
                --replSet=cfgrs \
                --port=27017 \
                --dbpath=/data/db \
                --bind_ip_all \
                --tlsOnNormalPorts \
                --tlsCAFile=/certs/ca.crt \
                --tlsCertificateKeyFile=/tls.pem

          livenessProbe:
            exec:
              command:
                - "mongo"
                - "--tls"
                - "--tlsCAFile=/certs/ca.crt"
                - "--tlsCertificateKeyFile=/tls.pem"
                - "--tlsAllowInvalidHostnames"
                - "--eval"
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - "mongo"
                - "--tls"
                - "--tlsCAFile=/certs/ca.crt"
                - "--tlsCertificateKeyFile=/tls.pem"
                - "--tlsAllowInvalidHostnames"
                - "--eval"
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          ports:
            - containerPort: 27017
              name: configsvr
          volumeMounts:
            - name: mongo
              mountPath: /data/db
            - name: certs
              mountPath: /certs
      volumes:
        - name: certs
          secret:
            secretName: certificate-mongodb-config-server
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
              weight: 5
  volumeClaimTemplates:
    - metadata:
        name: mongo
      spec:
        accessModes: [ "ReadWriteOnce" ]
#        storageClassName: "storageclass"
        resources:
          requests:
            storage: 2Gi

---